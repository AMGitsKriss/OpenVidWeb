@model OpenVid.Areas.Catalog.Models.Edit.VideoDetailsViewModel

@using (Html.BeginPanel("Video Details"))
{
    @if (Model.IsFlaggedForDeletion)
    {
        <div class="form-group">
            <div class="alert alert-danger">FLAGGED FOR DELETION</div>
        </div>
    }
    <div class="form-group">
        <label>Video Name:</label>
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
    </div>
    @Html.HiddenFor(m => m.Id)
    <div class="form-group">
        <label>Description:</label>
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", style = "word-break: break-word;" })
    </div>
    <div class="form-group">
        <label>Rating:</label>
        @Html.DropDownListFor(n => n.RatingId, new SelectList(Model.PossibleRatings, "Id", "Name"), "Unrated", new { @class = "form-control", style = "word-break: break-word;" })
    </div>
    <div class="form-group ui-widget">
        <label>Tags:</label>
        @Html.TextAreaFor(m => m.Tags, new { @class = "form-control", style = "word-break: break-word; height: 100px;" })
        <br />
        <div class="row">
            @foreach (var item in Model.SuggestedTags)
            {
                <div class="col-3 mb-4">
                    <b>@item.TagName</b>
                    @foreach (var tag in item.RelatedTags)
                    {
                        <br />
                        <span class="tag-suggestion @(tag.AlreadyUsed? "selected" : "")" data-tag="@tag.TagName">@tag.TagName</span>
                    }
                </div>
            }
        </div>
    </div>

    <button id="updateVideoDetails" class="btn btn-primary m-l-10">Update</button>
    <input id="deleteVideoDetails" class="btn btn-danger m-l-10" type="submit" value="Delete" formmethod="post" formaction="@Url.Action(SiteMap.FlagDelete)" />
    <a id="videoManagement" class="btn btn-dark m-l-10 float-right" href="@Url.Action(SiteMap.Catalog_Edit, new { Model.Id })">Video Management</a>

    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
    <script>
        // TODO - This should be in the edit.js file
        $("#Tags").keypress(function (e) {
            if (e.which === 13 && !e.shiftKey) {
                e.preventDefault();

                editVideo.updateVideo();
            }
        });

        $(function () {

            var availableTags = [];

            function split(val) {
                return val.split(/ \s*/);
            }
            function extractLast(term) {
                return split(term).pop();
            }

            $.ajax({
                type: 'GET',
                url: '@Url.Action(SiteMap.Playback_TagGetTags)',
                success: function (data) {
                    availableTags = data;
                },
                error: function (error) {
                    alert('Unable to get video tag list.');
                }
            });

            $("#Tags")
                // don't navigate away from the field on tab when selecting an item
                .on("keydown", function (event) {
                    if (event.keyCode === $.ui.keyCode.TAB &&
                        $(this).autocomplete("instance").menu.active) {
                        event.preventDefault();
                    }
                })
                .autocomplete({
                    minLength: 0,
                    source: function (request, response) {
                        // delegate back to autocomplete, but extract the last term
                        response($.ui.autocomplete.filter(
                            availableTags, extractLast(request.term)));
                    },
                    focus: function () {
                        // prevent value inserted on focus
                        return false;
                    },
                    select: function (event, ui) {
                        var terms = split(this.value);
                        // remove the current input
                        terms.pop();
                        // add the selected item
                        terms.push(ui.item.value);
                        // add placeholder to get the comma-and-space at the end
                        terms.push("");
                        this.value = terms.join(" ");
                        return false;
                    }
                });
        });

        $(".tag-suggestion").click(function (e) {
            var existingTags = $('#Tags').val();
            var thisTag = $(this).attr('data-tag');

            if (existingTags.indexOf(thisTag) == -1) {
                $('#Tags').val(existingTags + ' ' + thisTag + ' ');
                $('[data-tag=' + thisTag+']').addClass('selected');
            }
            else {
                var regexExp = new RegExp(thisTag, 'g');
                $('#Tags').val(existingTags.replace(regexExp, ''));
                $('[data-tag=' + thisTag + ']').removeClass('selected');
            }
        });
    </script>
}